# -*- coding: utf-8 -*-
"""Fitbit_Consumer_Behaviour_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16U7Zbt6Ye5GGwe-saXMs2gLlGpTmR-vQ

# **Fitbit Consumer Behaviour Analysis**

**Content**

Respondents generated this dataset to a distributed survey via Amazon Mechanical Turk between 03.12.2016 and 05.12.2016. Thirty eligible Fitbit users consented to submit personal tracker data, including minute-level output for physical activity, heart rate, and sleep monitoring. Individual reports can be parsed by export session ID (column A) or timestamp (column B). Variation between output represents the use of different Fitbit trackers and individual tracking behaviors/preferences.


---

- Installing the pandas-profiling library

 (The code is taken directly from the example given on the GitHub of pandas-profiling from the following URL : https://github.com/dataprofessor/code/blob/master/python/pandas_profiling_example.ipynb)
"""

! pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip

"""- Importing the libraries"""

import pandas as pd
from pandas_profiling import ProfileReport
import numpy as np
from google.colab import files

"""- Loading the daily dataset"""

daily_activity = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/dailyActivity_merged.csv")
daily_calories = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/dailyCalories_merged.csv")
daily_intensity = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/dailyIntensities_merged.csv")
daily_step = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/dailySteps_merged.csv")

"""- Loading the hourly datasets"""

hourly_calories = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/hourlyCalories_merged.csv")
hourly_intensity = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/hourlyIntensities_merged.csv")
hourly_step = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/hourlySteps_merged.csv")

"""- Loading the minutes dataset"""

minute_calories = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/minuteCaloriesNarrow_merged.csv")
minute_intensity = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/minuteIntensitiesNarrow_merged.csv")
minute_MET = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/minuteMETsNarrow_merged.csv")
minute_sleep = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/minuteSleep_merged.csv")
minute_step = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/minuteStepsNarrow_merged.csv")

"""- Loading the sleep day dataset"""

sleep_day = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/hourlyCalories_merged.csv")

"""- Loading the weight log dataset"""

weight_log = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/hourlyCalories_merged.csv")

"""- Loading the heart rate dataset"""

heart_rate = pd.read_csv("/content/drive/MyDrive/Week 8 (Capstone Project) - Fitbit Dataset-20240126T073833Z-001/Week 8 (Capstone Project) - Fitbit Dataset/hourlyCalories_merged.csv")

"""- Creating a copy of the original datasets"""

dactivitycopy = daily_activity.copy()
dcaloriecopy = daily_calories.copy()
dintensitycopy = daily_intensity.copy()
dstepcopy = daily_step.copy()

"""- Creating a copy of the original datasets"""

hcaloriecopy = hourly_calories.copy()
hintensitycopy = hourly_intensity.copy()
hstepcopy = hourly_step.copy()

"""- Creating a copy of the original datasets"""

mcaloriecopy = minute_calories.copy()
mintensitycopy = minute_intensity.copy()
mstepcopy = minute_step.copy()
msleepcopy = minute_sleep.copy()
mmetcopy = minute_MET.copy()

"""- Creating a copy of the original dataset"""

sdaycopy = sleep_day.copy()

"""- Creating a copy of the original dataset"""

wlogcopy = weight_log.copy()

"""- Creating a copy of the original dataset"""

hratecopy = heart_rate.copy()

"""---

## **Data Transformation and cleaning**

- Getting first 5 values of the daily activity dataset
"""

dactivitycopy.head()

"""- Getting first 5 values of the daily calories dataset"""

dcaloriecopy.head()

"""- Getting first 5 values of the daily intensity dataset"""

dintensitycopy.head()

"""- Getting first 5 values of the daily step dataset"""

dstepcopy.head()

"""- Getting information about the daily activity dataset"""

dactivitycopy.info()

"""- Getting information about the daily calorie dataset"""

dcaloriecopy.info()

"""- Getting information about the daily intensity dataset"""

dintensitycopy.info()

"""- Getting information about the daily step dataset"""

dstepcopy.info()

"""- Converting neccessary columns to 'datetime' type"""

dactivitycopy['ActivityDate'] = pd.to_datetime(dactivitycopy['ActivityDate'])
dcaloriecopy['ActivityDay'] = pd.to_datetime(dcaloriecopy['ActivityDay'])
dintensitycopy['ActivityDay'] = pd.to_datetime(dintensitycopy['ActivityDay'])
dstepcopy['ActivityDay'] = pd.to_datetime(dstepcopy['ActivityDay'])

"""- Merging the three daily-datasets based on 'ActivityDay' and 'Id'"""

merged_daily_df = pd.merge(dcaloriecopy, dintensitycopy, on=['ActivityDay', 'Id'])
merged_daily_df = pd.merge(merged_daily_df, dstepcopy, on=['ActivityDay', 'Id'])
merged_daily_df = pd.merge(merged_daily_df, dactivitycopy[['Id', 'TotalDistance', 'TrackerDistance', 'LoggedActivitiesDistance']], on='Id', how='left')
merged_daily_df.head()

"""- Removing duplicate rows from the merged daily dataset"""

merged_daily_df = merged_daily_df.drop_duplicates()

"""- Getting information about the merged daily dataset"""

merged_daily_df.info()

"""- Converting neccessary columns to 'datetime' type"""

hintensitycopy['ActivityHour'] = pd.to_datetime(hintensitycopy['ActivityHour'])
hcaloriecopy['ActivityHour'] = pd.to_datetime(hcaloriecopy['ActivityHour'])
hstepcopy['ActivityHour'] = pd.to_datetime(hstepcopy['ActivityHour'])

"""- Getting first 5 values of the hourly intensity dataset"""

hintensitycopy.head()

"""- Getting first 5 values of the hourly step dataset"""

hstepcopy.head()

"""- Getting first 5 values of the hourly calorie dataset"""

hcaloriecopy.head()

"""- Merging the three Hourly-datasets based on 'Id' and 'ActivityHour'"""

merged_hourly_df = pd.merge(hintensitycopy, hcaloriecopy, on=['Id', 'ActivityHour'], how='left')
merged_hourly_df = pd.merge(merged_hourly_df, hstepcopy, on=['Id', 'ActivityHour'], how='left')

"""- Getting first 5 values of the merged hourly dataset"""

merged_hourly_df.head()

"""- Getting information about the merged hourly dataset"""

merged_hourly_df.info()

"""- Getting first 5 values of the minute calorie dataset"""

mcaloriecopy.head()

"""- Getting first 5 values of the minute step dataset"""

mstepcopy.head()

"""- Getting first 5 values of the minute sleep dataset"""

msleepcopy.head()

"""- Getting first 5 values of the minute intensity dataset"""

mintensitycopy.head()

"""- Getting first 5 values of the minute METs dataset"""

mmetcopy.head()

"""- Converting neccessary columns to 'datetime' type"""

mintensitycopy['ActivityMinute'] = pd.to_datetime(mintensitycopy['ActivityMinute'])
mmetcopy['ActivityMinute'] = pd.to_datetime(mmetcopy['ActivityMinute'])
mstepcopy['ActivityMinute'] = pd.to_datetime(mstepcopy['ActivityMinute'])
mcaloriecopy['ActivityMinute'] = pd.to_datetime(mcaloriecopy['ActivityMinute'])
msleepcopy['date'] = pd.to_datetime(msleepcopy['date'])

"""- Merging the three Minute-datasets based on 'Id' and 'ActivityMinute'"""

merged_minute_df = pd.merge(mintensitycopy, mmetcopy, on=['Id', 'ActivityMinute'], how='left')
merged_minute_df = pd.merge(merged_minute_df, mstepcopy, on=['Id', 'ActivityMinute'], how='left')
merged_minute_df = pd.merge(merged_minute_df, mcaloriecopy, on=['Id', 'ActivityMinute'], how='left')

"""- Getting first 5 values of the merged minute dataset"""

merged_minute_df.head()

"""- Getting information about the merged minute dataset"""

merged_minute_df.info()

"""- Getting first 5 values of the Sleep Day dataset"""

sdaycopy.head()

"""- Getting first 5 values of the Heart Rate dataset"""

hratecopy.head()

"""- Getting first 5 values of the Weight Log dataset"""

wlogcopy.head()

"""- Converting neccessary columns to 'datetime' type"""

wlogcopy['ActivityHour'] = pd.to_datetime(wlogcopy['ActivityHour'])
hratecopy['ActivityHour'] = pd.to_datetime(hratecopy['ActivityHour'])
sdaycopy['ActivityHour'] = pd.to_datetime(sdaycopy['ActivityHour'])

"""- Getting information about the weight log dataset"""

wlogcopy.info()

"""- Getting information about the heart rate dataset"""

hratecopy.info()

"""- Getting information about the sleep day dataset"""

sdaycopy.info()

"""---

## **Final datasets obtained**
- **merged_daily_df** : Containing all daily data
- **merged_hourly_df** : Containing all hourly data
- **merged_minute_df** : Containing ann minute data
- **hratecopy** : Containing Heart Rate data
- **wlogcopy** : Containing Weight Log data
- **sdaycopy** : Containing Sleep Day data

---

## **Pandas Profiling**

- Creating ProfileReport for the datasets obtained
"""

dailyprofile = ProfileReport(merged_daily_df, title='Pandas Profiling Report for Daily Activities', html={'style':{'full_width':False}})
hourlyprofile = ProfileReport(merged_hourly_df, title='Pandas Profiling Report for Hourly Activities', html={'style':{'full_width':False}})
minuteprofile = ProfileReport(merged_minute_df, title='Pandas Profiling Report for Minute Activities', html={'style':{'full_width':False}})
hrateprofile = ProfileReport(hratecopy, title='Pandas Profiling Report for Heart Rate', html={'style':{'full_width':False}})
wlogprofile = ProfileReport(wlogcopy, title='Pandas Profiling Report for Weight Log', html={'style':{'full_width':False}})
sdayprofile = ProfileReport(sdaycopy, title='Pandas Profiling Report for Sleep Day', html={'style':{'full_width':False}})

"""- Getting the report for Daily Activities"""

dailyprofile

"""- Getting the report for Hourly Activities"""

hourlyprofile

"""- Getting the report for Minute Activities"""

minuteprofile

"""- Getting the report for Heart Rate"""

hrateprofile

"""- Getting the report for Weight Log"""

wlogprofile

"""- Getting the report for Sleep Day"""

sdayprofile

"""---

## **Exporting the obtained datasets as .csv file**
1. merged_daily_df
2. merged_hourly_df
3. merged_minute_df
4. hratecopy
5. wlogcopy
6. sdaycopy

- Converting each DataFrame to .csv file
"""

merged_daily_df.to_csv('merged_daily_df.csv', index=False)
merged_hourly_df.to_csv('merged_hourly_df.csv', index=False)
merged_minute_df.to_csv('merged_minute_df.csv', index=False)
hratecopy.to_csv('hratecopy.csv', index=False)
wlogcopy.to_csv('wlogcopy.csv', index=False)
sdaycopy.to_csv('sdaycopy.csv', index=False)

"""- Downloading .csv  file"""

file_names = ['merged_daily_df.csv', 'merged_hourly_df.csv', 'merged_minute_df.csv', 'hratecopy.csv', 'wlogcopy.csv', 'sdaycopy.csv']

for file_name in file_names:
    files.download(file_name)

"""---

## **Data Visualization**
Click on the given link : [Click here](https://public.tableau.com/views/FitbitAnalysisOngoing/Dashboard2?:language=en-US&:display_count=n&:origin=viz_share_link)

---

## **Insights and Trends**

1. From the given visualization, we can identify that there is an uniform straight trend line for different users between Daily: Total Steps taken and Calories burned.

2. There is an increasing nature of trend line for different users between Hourly: Avg. Calories burned and Total Steps taken.

3. There is an uniform straight trend line for Daily: Avg. Sedentary for different users.

4. The average Intensity for all user is found out to be around 12.04

5. The average light active distance for different users is found to be around 3.5Km

---
"""